{"version":3,"sources":["components/Tile/Tile.jsx","components/Board/Board.jsx","useLocalStorage.js","boardLogic.js","helpers.js","App.jsx","index.js"],"names":["pickColour","num","Tile","className","style","background","color","fontSize","Board","data","score","onClickNewGame","win","gameOver","onClick","map","row","rowIndex","index","useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","flipMatrix","matrix","column","rotateRight","reverse","rotateLeft","getNewPosition","Math","floor","random","App","INITIAL_DATA","setData","setScore","setGameOver","restart","setRestart","setWin","history","setHistory","scorelist","setScoreList","initBoard","board","cloneDeep","placeRandom","useEffect","newGrid","rand1","rand2","boardMoved","original","updated","flatted","concat","apply","shiftLeft","arr","result","filter","Boolean","slice","i","length","handleLeft","checkDead","oldData","newData","includes","checkForGameOver","shiftRight","handleRight","handleUp","handleDown","handleKeyDown","event","keyCode","addEventListener","removeEventListener","handlers","useSwipeable","onSwipedLeft","onSwipedRight","onSwipedUp","onSwipedDown","preventDefaultTouchmoveEvent","trackMouse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAGMA,EAAa,SAACC,GACnB,OAAQA,GACP,KAAK,EAAG,MAAO,UACf,KAAK,EAAG,MAAO,UACf,KAAK,EAAG,MAAO,UACf,KAAK,GAAI,MAAO,UAChB,KAAK,GAAI,MAAO,UAChB,KAAK,GAAI,MAAO,WAChB,KAAK,IAAK,MAAO,UACjB,KAAK,IAAK,MAAO,UACjB,KAAK,IAAK,MAAO,UACjB,KAAK,KAAM,MAAO,UAClB,KAAK,KAAM,MAAO,UAClB,QAAS,MAAO,YAILC,EAAO,SAAC,GAAa,IAAXD,EAAU,EAAVA,IACtB,OACC,qBACCE,UAAU,OACVC,MAAO,CACNC,WAAYL,EAAWC,GACvBK,MAAe,IAARL,GAAqB,IAARA,EAAY,UAAY,UAC5CM,SAAUN,EAAM,IAAM,OAAS,QALjC,SAQEA,GAAY,MC1BHO,G,MAAQ,SAAC,GAMf,IALNC,EAKK,EALLA,KACAC,EAIK,EAJLA,MACAC,EAGK,EAHLA,eACAC,EAEK,EAFLA,IACAC,EACK,EADLA,SAEA,OACC,sBAAKV,UAAU,QAAf,UACC,qBAAKA,UAAU,OAAf,SACC,sBAAKA,UAAU,aAAf,UACC,oBAAIA,UAAU,aAAd,kBACA,sBAAKA,UAAU,uBAAf,UACC,sBAAKA,UAAU,iBAAf,UACC,sBAAMA,UAAU,0BAAhB,mBACA,+BAAOO,OAER,wBACAP,UAAU,eACTW,QAAS,WACRH,KAHF,6BAWH,qBAAKR,UAAU,aAAf,SACEM,EAAKM,KAAI,SAACC,EAAKC,GACf,OACC,qBAAoBd,UAAU,YAA9B,SACEa,EAAID,KAAI,SAACd,EAAKiB,GAAN,OACR,cAAC,EAAD,CAAMjB,IAAKA,GAAUiB,OAFbD,QAQb,sBAAKd,UAAU,SAAf,WACKS,IAAQC,GAAY,8CACjBD,GAAO,iEACPC,GAAY,sDCfRM,MA7Bf,SAAyBC,EAAKC,GAAe,IAAD,EACLC,oBAAS,WAC9C,IAEA,IAAMC,EAAOC,OAAOC,aAAaC,QAAQN,GAEzC,OAAOG,EAAOI,KAAKC,MAAML,GAAQF,EAChC,MAAOQ,GAGR,OADAC,QAAQC,IAAIF,GACLR,MAVmC,mBACpCW,EADoC,KACvBC,EADuB,KA0B3C,MAAO,CAACD,EAZQ,SAAAE,GAChB,IACC,IAAMC,EACLD,aAAiBE,SAAWF,EAAMF,GAAeE,EAElDD,EAAeE,GAEfX,OAAOC,aAAaY,QAAQjB,EAAKO,KAAKW,UAAUH,IAC/C,MAAON,GACRC,QAAQC,IAAIF,O,gBCzBRU,EAAa,SAAAC,GAAM,OACxBA,EAAO,GAAGzB,KAAI,SAAC0B,EAAQvB,GAAT,OACbsB,EAAOzB,KAAI,SAAAC,GAAG,OAAIA,EAAIE,UAIXwB,EAAc,SAAAF,GACvB,OAAOD,EAAWC,EAAOG,YAGhBC,EAAa,SAAAJ,GACtB,OAAOD,EAAWC,GAAQG,WCJfE,EAPQ,WAGnB,MAAO,CAFaC,KAAKC,MAAsB,EAAhBD,KAAKE,UAChBF,KAAKC,MAAsB,EAAhBD,KAAKE,Y,QCO3BC,G,OAAM,WACjB,IAAMC,EAAe,CACnB,CAAC,KAAM,KAAM,KAAM,MACnB,CAAC,KAAM,KAAM,KAAM,MACnB,CAAC,KAAM,KAAM,KAAM,MACnB,CAAC,KAAM,KAAM,KAAM,OALE,EAQC/B,EAAgB,UAAW+B,GAR5B,mBAQhBzC,EARgB,KAQV0C,EARU,OASGhC,EAAgB,QAAS,GAT5B,mBAShBT,EATgB,KAST0C,EATS,OAUSjC,EAAgB,YAAY,GAVrC,mBAUhBN,EAVgB,KAUNwC,EAVM,OAWOlC,EAAgB,WAAW,GAXlC,mBAWhBmC,EAXgB,KAWPC,EAXO,OAYDpC,EAAgB,OAAO,GAZtB,mBAYhBP,EAZgB,KAYX4C,EAZW,OAaOrC,EAAgB,UAAW,IAblC,mBAahBsC,EAbgB,KAaPC,EAbO,OAcWvC,EAAgB,YAAa,IAdxC,mBAchBwC,EAdgB,KAcLC,EAdK,KAgBjBC,EAAY,WAChB,IAAIC,EAAQC,IAAUtD,GACtBuD,EAAYF,GACZE,EAAYF,GACZX,EAAQW,GACRP,GAAW,IAGbU,qBAAU,WACJX,GACFO,MAED,CAACP,IAEJ,IAAMU,EAAc,SAACE,GAEnB,IAFgC,IAAD,EACVrB,EAAeqB,GADL,mBAC1BC,EAD0B,KACnBC,EADmB,KAEE,OAA1BF,EAAQC,GAAOC,IAAiB,CAAC,IAAD,EACpBvB,EAAeqB,GADK,mBACpCC,EADoC,KAC7BC,EAD6B,KAIvC,OADAF,EAAQC,GAAOC,GAAStB,KAAKE,SAAW,GAAM,EAAI,EAC3CkB,GAGHG,EAAa,SAACC,EAAUC,GAC5B,OAAO5C,KAAKW,UAAUiC,KAAa5C,KAAKW,UAAUgC,IAGpD,SAASE,EAAQV,GACf,MAAO,GAAGW,OAAOC,MAAM,GAAIZ,GAG7B,IAAMa,EAAY,SAAAC,GAMhB,IALA,IAAMC,EAASD,EACZE,OAAOC,SACPN,OAAO,CAAC,KAAM,KAAM,KAAM,OAC1BO,MAAM,EAAG,GAEHC,EAAI,EAAGA,EAAIL,EAAIM,OAAQD,IAC1BJ,EAAOI,IAAMJ,EAAOI,EAAI,IAAMJ,EAAOI,KAAOJ,EAAOI,EAAI,KACzDJ,EAAOI,IAAM,EACbJ,EAAOI,EAAI,GAAK,KAChB7B,EAAS1C,EAAQmE,EAAOI,KAG5B,OAAOJ,EACJC,OAAOC,SACPN,OAAO,CAAC,KAAM,KAAM,KAAM,OAC1BO,MAAM,EAAG,IAGRG,EAAa,WAAuB,IAAtBC,IAAqB,yDACnCC,EAAUtB,IAAUtD,GAEpB6E,EAAUvB,IAAUtD,GAAMM,KAAI,SAAAQ,GAAI,OAAIoD,EAAUpD,MACpD,GAAI8C,EAAWgB,EAASC,GAAU,CAEhC,GADA5B,EAAW,GAAD,mBAAKD,GAAL,CAAc4B,KACpBb,EAAQc,GAASC,SAAS,MAG5B,OAFA/B,GAAO,QACPL,EAAQmC,GAEHtB,EAAYsB,QACTd,EAAQa,GAASE,SAAS,OAASH,GAAaI,EAAiBF,IAC3EjC,GAAY,GAKd,OAHI+B,GACFjC,EAAQmC,GAEHA,GAGHG,EAAa,SAAAb,GAIjB,IAFA,IAAIC,EAAS,GAEJI,GAHTL,EAAMA,EAAIE,OAAOC,UAGAG,OAAS,EAAGD,EAAI,EAAGA,IAC9BL,EAAIK,GAAK,GAAKL,EAAIK,EAAI,KAAOL,EAAIK,KACnCL,EAAIK,IAAM,EACVL,EAAIK,EAAI,GAAK,KACb7B,EAAS1C,EAAQkE,EAAIK,KAKzB,OADAJ,GADAA,EAAS,CAAC,KAAM,KAAM,KAAM,MAAMJ,OAAOG,EAAIE,OAAOC,WACpCC,MAAMH,EAAOK,OAAS,IAIlCQ,EAAc,WAAuB,IAAtBN,IAAqB,yDACpCC,EAAU5E,EACd,IAAIG,EAAJ,CAIA,IAAI0E,EAAUvB,IAAUtD,GAAMM,KAAI,SAAAQ,GAAI,OAAIkE,EAAWlE,MACrD,GAAI8C,EAAWgB,EAASC,GAAU,CAEhC,GADA5B,EAAW,GAAD,mBAAKD,GAAL,CAAc4B,KACpBb,EAAQc,GAASC,SAAS,MAG5B,OAFA/B,GAAO,QACPL,EAAQmC,GAEHtB,EAAYsB,QACTd,EAAQa,GAASE,SAAS,OAASH,GAAaI,EAAiBF,IAC3EjC,GAAY,GAKd,OAHI+B,GACFjC,EAAQmC,GAEHA,IAGHK,EAAW,WAAuB,IAAtBP,IAAqB,yDACjCC,EAAUtB,IAAUtD,GAEpB6E,EAAUvB,IAAUtD,GAExB,GADA6E,EAAU1C,EAAWF,EAAY4C,GAASvE,KAAI,SAAAQ,GAAI,OAAIkE,EAAWlE,OAC7D8C,EAAWgB,EAASC,GAAU,CAEhC,GADA5B,EAAW,GAAD,mBAAKD,GAAL,CAAc4B,KACpBb,EAAQc,GAASC,SAAS,MAG5B,OAFA/B,GAAO,QACPL,EAAQmC,GAEHtB,EAAYsB,QACTd,EAAQa,GAASE,SAAS,OAASH,GAAaI,EAAiBF,IAC3EjC,GAAY,GAKd,OAHI+B,GACFjC,EAAQmC,GAEHA,GAGHM,EAAa,WAAuB,IAAtBR,IAAqB,yDACnCC,EAAUtB,IAAUtD,GAEpB6E,EAAUvB,IAAUtD,GAExB,GADA6E,EAAU1C,EAAWF,EAAY4C,GAASvE,KAAI,SAAAQ,GAAI,OAAIoD,EAAUpD,OAC5D8C,EAAWgB,EAASC,GAAU,CAEhC,GADA5B,EAAW,GAAD,mBAAKD,GAAL,CAAc4B,KACpBb,EAAQc,GAASC,SAAS,MAG5B,OAFA/B,GAAO,QACPL,EAAQmC,GAEHtB,EAAYsB,QACTd,EAAQa,GAASE,SAAS,OAASH,GAAaI,EAAiBF,IAC3EjC,GAAY,GAKd,OAHI+B,GACFjC,EAAQmC,GAEHA,GAGHO,EAAgB,SAACC,GACrB,OAAQA,EAAMC,SACZ,KAAK,GACHJ,IACA,MACF,KAAK,GACHC,IACA,MACF,KAAK,GACHT,IACA,MACF,KAAK,GACHO,IACA,MACF,QACE,SAINzB,qBAAU,WAGR,OAFAzC,OAAOwE,iBAAiB,UAAWH,GAE5B,WACLrE,OAAOyE,oBAAoB,UAAWJ,OAI1C,IAAMK,EAAWC,uBAAa,CAC5BC,aAAc,kBAAMjB,KACpBkB,cAAe,kBAAMX,KACrBY,WAAY,kBAAMX,KAClBY,aAAc,kBAAMX,KACpBY,8BAA8B,EAC9BC,YAAY,IAYRjB,EAAmB,SAAA/E,GAOvB,OANY,CACV4D,EAAW5D,EAAMkF,GAAS,IAC1BtB,EAAW5D,EAAMmF,GAAW,IAC5BvB,EAAW5D,EAAMiF,GAAY,IAC7BrB,EAAW5D,EAAM0E,GAAW,KAEjBI,UAAS,IAGxB,OACE,+CAASW,GAAT,aACE,qBAAK/F,UAAU,MAAf,SACE,cAAC,EAAD,CACEM,KAAMA,EACNC,MAAOA,EACPC,eAzBe,WACrBiD,EAAa,GAAD,mBAAKD,GAAL,CAAgBjD,KAC5BgD,EAAW,IACXL,GAAY,GACZE,GAAW,GACXH,EAAS,GACTD,EAAQD,IAoBFW,UAAWA,EACXjD,IAAKA,EACLC,SAAUA,WC1OpB6F,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.ee4217e7.chunk.js","sourcesContent":["import React from 'react';\nimport './Tile.scss';\n\nconst pickColour = (num) => {\n\tswitch (num) {\n\t\tcase 2: return '#eee4da';\n\t\tcase 4: return '#ede0c8';\n\t\tcase 8: return '#f2b179';\n\t\tcase 16: return '#f59563';\n\t\tcase 32: return '#f67c5f';\n\t\tcase 64: return ' #f65e3b';\n\t\tcase 128: return '#edcf72';\n\t\tcase 256: return '#edcc61';\n\t\tcase 512: return '#edc850';\n\t\tcase 1024: return '#edc53f';\n\t\tcase 2048: return '#edc22e';\n\t\tdefault: return '#C2B3A3';\n\t}\n}\n\nexport const Tile = ({ num }) => {\n\treturn (\n\t\t<div\n\t\t\tclassName='tile'\n\t\t\tstyle={{\n\t\t\t\tbackground: pickColour(num),\n\t\t\t\tcolor: num === 2 || num === 4 ? \"#645B52\" : \"#F7F4EF\",\n\t\t\t\tfontSize: num > 512 ? '35px' : '45px',\n\t\t\t}}\n\t\t>\n\t\t\t{num ? num : ''}\n\t\t</div>\n\t)\n}\n","import React from 'react';\r\nimport { Tile } from '../Tile/Tile';\r\nimport './Board.scss';\r\n\r\nexport const Board = ({\r\n\tdata,\r\n\tscore,\r\n\tonClickNewGame,\r\n\twin,\r\n\tgameOver,\r\n}) => {\r\n\treturn (\r\n\t\t<div className=\"board\">\r\n\t\t\t<div className='game'>\r\n\t\t\t\t<div className='game-group'>\r\n\t\t\t\t\t<h1 className='game-title'>2048</h1>\r\n\t\t\t\t\t<div className='game-score-container'>\r\n\t\t\t\t\t\t<div className='game-score-box'>\r\n\t\t\t\t\t\t\t<span className='game-score-box--current'>SCORE</span>\r\n\t\t\t\t\t\t\t<span>{score}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName='game-refresh'\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tonClickNewGame()\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tRestart\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='board-body'>\r\n\t\t\t\t{data.map((row, rowIndex) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={rowIndex} className='board-row'>\r\n\t\t\t\t\t\t\t{row.map((num, index) => (\r\n\t\t\t\t\t\t\t\t<Tile num={num} key={index} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"finish\">\r\n\t\t\t\t  {!win && !gameOver && <span>Good luck!</span>}\r\n          {win && <span>Winner! Congrats! You did it!</span>}\r\n          {gameOver && <span>Game over!</span>}\r\n      </div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import { useState } from 'react';\r\n\r\nfunction useLocalStorage(key, initialValue) {\r\n\tconst [storedValue, setStoredValue] = useState(() => {\r\n\t\ttry {\r\n\r\n\t\tconst item = window.localStorage.getItem(key);\r\n\r\n\t\treturn item ? JSON.parse(item) : initialValue;\r\n\t} catch (error) {\r\n\r\n\t\tconsole.log(error);\r\n\t\treturn initialValue;\r\n\t}\r\n});\r\n\r\nconst setValue = value => {\r\n\ttry {\r\n\t\tconst valueToStore =\r\n\t\t\tvalue instanceof Function ? value(storedValue) : value;\r\n\r\n\t\tsetStoredValue(valueToStore);\r\n\r\n\t\twindow.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\treturn [storedValue, setValue];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","const flipMatrix = matrix => (\r\n\tmatrix[0].map((column, index) => (\r\n\t\tmatrix.map(row => row[index])\r\n\t))\r\n);\r\n\r\nexport const rotateRight = matrix => {\r\n    return flipMatrix(matrix.reverse())\r\n};\r\n\r\nexport const rotateLeft = matrix => {\r\n    return flipMatrix(matrix).reverse()\r\n};\r\n","const getNewPosition = () => {\r\n    const rowPosition = Math.floor(Math.random() * 4);\r\n    const colPosition = Math.floor(Math.random() * 4);\r\n    return [rowPosition, colPosition];\r\n};\r\n\r\n\r\nexport default getNewPosition;\r\n","import React, { useEffect } from 'react';\nimport { Board } from './components/Board/Board';\nimport useLocalStorage from './useLocalStorage';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { rotateLeft, rotateRight } from './boardLogic';\nimport getNewPosition from './helpers';\nimport { useSwipeable } from \"react-swipeable\";\nimport './App.scss';\n\nexport const App = () => {\n  const INITIAL_DATA = [\n    [null, null, null, null],\n    [null, null, null, null],\n    [null, null, null, null],\n    [null, null, null, null],\n  ]\n\n  const [data, setData] = useLocalStorage(\"initial\", INITIAL_DATA);\n  const [score, setScore] = useLocalStorage(\"score\", 0);\n  const [gameOver, setGameOver] = useLocalStorage(\"gameover\", false);\n  const [restart, setRestart] = useLocalStorage(\"restart\", true);\n  const [win, setWin] = useLocalStorage(\"win\", false);\n  const [history, setHistory] = useLocalStorage(\"history\", []);\n  const [scorelist, setScoreList] = useLocalStorage(\"scorelist\", []);\n\n  const initBoard = () => {\n    let board = cloneDeep(data);\n    placeRandom(board);\n    placeRandom(board);\n    setData(board);\n    setRestart(false);\n  };\n\n  useEffect(() => {\n    if (restart) {\n      initBoard();\n    } // eslint-disable-next-line\n  }, [restart]);\n\n  const placeRandom = (newGrid) => {\n    let [rand1, rand2] = getNewPosition(newGrid);\n    while (newGrid[rand1][rand2] !== null) {\n      [rand1, rand2] = getNewPosition(newGrid);\n    }\n    newGrid[rand1][rand2] = Math.random() > 0.9 ? 4 : 2;\n    return newGrid;\n  };\n\n  const boardMoved = (original, updated) => {\n    return JSON.stringify(updated) !== JSON.stringify(original) ? true : false;\n  };\n\n  function flatted(board) {\n    return [].concat.apply([], board);\n  }\n\n  const shiftLeft = arr => {\n    const result = arr\n      .filter(Boolean)\n      .concat([null, null, null, null])\n      .slice(0, 4);\n\n    for (let i = 0; i < arr.length; i++) {\n      if (result[i] && result[i + 1] && result[i] === result[i + 1]) {\n        result[i] *= 2;\n        result[i + 1] = null;\n        setScore(score + result[i]);\n      }\n    }\n    return result\n      .filter(Boolean)\n      .concat([null, null, null, null])\n      .slice(0, 4);\n  };\n\n  const handleLeft = (checkDead = true) => {\n    let oldData = cloneDeep(data);\n\n    let newData = cloneDeep(data).map(item => shiftLeft(item));\n    if (boardMoved(oldData, newData)) {\n      setHistory([...history, oldData]);\n      if (flatted(newData).includes(2048)) {\n        setWin(true);\n        setData(newData);\n        return;\n      } else placeRandom(newData);\n    } else if (!flatted(oldData).includes(null) && checkDead && checkForGameOver(newData)) {\n      setGameOver(true);\n    }\n    if (checkDead) {\n      setData(newData);\n    }\n    return newData;\n  };\n\n  const shiftRight = arr => {\n    arr = arr.filter(Boolean);\n    let result = [];\n\n    for (let i = arr.length - 1; i > 0; i--) {\n      if (arr[i] > 0 && arr[i - 1] === arr[i]) {\n        arr[i] *= 2;\n        arr[i - 1] = null;\n        setScore(score + arr[i]);\n      }\n    }\n    result = [null, null, null, null].concat(arr.filter(Boolean));\n    result = result.slice(result.length - 4);\n    return result;\n  };\n\n  const handleRight = (checkDead = true) => {\n    let oldData = data;\n    if (win) {\n      return;\n    }\n\n    let newData = cloneDeep(data).map(item => shiftRight(item));\n    if (boardMoved(oldData, newData)) {\n      setHistory([...history, oldData]);\n      if (flatted(newData).includes(2048)) {\n        setWin(true);\n        setData(newData);\n        return;\n      } else placeRandom(newData);\n    } else if (!flatted(oldData).includes(null) && checkDead && checkForGameOver(newData)) {\n      setGameOver(true);\n    }\n    if (checkDead) {\n      setData(newData);\n    }\n    return newData\n  };\n\n  const handleUp = (checkDead = true) => {\n    let oldData = cloneDeep(data);\n\n    let newData = cloneDeep(data);\n    newData = rotateLeft(rotateRight(newData).map(item => shiftRight(item)));\n    if (boardMoved(oldData, newData)) {\n      setHistory([...history, oldData]);\n      if (flatted(newData).includes(2048)) {\n        setWin(true);\n        setData(newData);\n        return\n      } else placeRandom(newData);\n    } else if (!flatted(oldData).includes(null) && checkDead && checkForGameOver(newData)) {\n      setGameOver(true);\n    }\n    if (checkDead) {\n      setData(newData);\n    }\n    return newData;\n  }\n\n  const handleDown = (checkDead = true) => {\n    let oldData = cloneDeep(data);\n\n    let newData = cloneDeep(data);\n    newData = rotateLeft(rotateRight(newData).map(item => shiftLeft(item)));\n    if (boardMoved(oldData, newData)) {\n      setHistory([...history, oldData]);\n      if (flatted(newData).includes(2048)) {\n        setWin(true);\n        setData(newData);\n        return;\n      } else placeRandom(newData);\n    } else if (!flatted(oldData).includes(null) && checkDead && checkForGameOver(newData)) {\n      setGameOver(true);\n    }\n    if (checkDead) {\n      setData(newData);\n    }\n    return newData;\n  }\n\n  const handleKeyDown = (event) => {\n    switch (event.keyCode) {\n      case 38:\n        handleUp();\n        break;\n      case 40:\n        handleDown();\n        break;\n      case 37:\n        handleLeft();\n        break;\n      case 39:\n        handleRight();\n        break;\n      default:\n        return;\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handlers = useSwipeable({\n    onSwipedLeft: () => handleLeft(),\n    onSwipedRight: () => handleRight(),\n    onSwipedUp: () => handleUp(),\n    onSwipedDown: () => handleDown(),\n    preventDefaultTouchmoveEvent: true,\n    trackMouse: true\n  });\n\n  const onClickNewGame = () => {\n    setScoreList([...scorelist, score]);\n    setHistory([]);\n    setGameOver(false);\n    setRestart(true);\n    setScore(0);\n    setData(INITIAL_DATA);\n  }\n\n  const checkForGameOver = data => {\n    let moves = [\n      boardMoved(data, handleUp(false)),\n      boardMoved(data, handleDown(false)),\n      boardMoved(data, handleRight(false)),\n      boardMoved(data, handleLeft(false))\n    ];\n    return moves.includes(true) ? false : true;\n  };\n\n  return (\n    <div {...handlers}>\n      <div className=\"App\">\n        <Board\n          data={data}\n          score={score}\n          onClickNewGame={onClickNewGame}\n          initBoard={initBoard}\n          win={win}\n          gameOver={gameOver}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}